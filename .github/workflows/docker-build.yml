name: Build and Push Docker Image

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:  # Allow manual triggering
  push:
    branches:
      - main

jobs:
  check-for-updates:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check.outputs.has_changes }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Clone upstream
        run: git clone --depth 1 https://github.com/havaleiros/hassio-haval-h6-to-mqtt.git upstream
      
      - name: Check for updates
        id: check
        run: |
          # For push events, always indicate changes
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # For scheduled events, check for actual changes
          LAST_COMMIT_DATE=$(git log -1 --format=%ct -- Dockerfile)
          UPSTREAM_COMMIT_DATE=$(cd upstream && git log -1 --format=%ct)
          
          # Add debug output to troubleshoot
          echo "Last commit date: $LAST_COMMIT_DATE"
          echo "Upstream commit date: $UPSTREAM_COMMIT_DATE"
          
          # Check if variables are set before comparison
          if [[ -n "$UPSTREAM_COMMIT_DATE" && -n "$LAST_COMMIT_DATE" ]]; then
            if [[ $UPSTREAM_COMMIT_DATE -gt $LAST_COMMIT_DATE ]]; then
              echo "has_changes=true" >> $GITHUB_OUTPUT
            else
              echo "has_changes=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "One or both commit dates are empty, defaulting to has_changes=true"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Get version
        id: version
        if: steps.check.outputs.has_changes == 'true'
        run: |
          cd upstream
          # Find the config.json file first to confirm its location
          echo "Finding config.json location..."
          find . -name "config.json" | grep -v "node_modules" || echo "No config.json found"
          
          # Try to extract version using a more flexible approach
          VERSION=$(find . -name "config.json" -not -path "*/node_modules/*" -exec grep -oP '"version": "\K[^"]+' {} \; | head -n 1)
          
          # If VERSION is empty, set a default
          if [ -z "$VERSION" ]; then
            VERSION=$(date +"%Y.%m.%d")
            echo "No version found, using date as version: $VERSION"
          fi
          
          echo "Found version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build-and-push:
    needs: check-for-updates
    if: needs.check-for-updates.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/haval-hass-docker:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/haval-hass-docker:${{ needs.check-for-updates.outputs.version }}