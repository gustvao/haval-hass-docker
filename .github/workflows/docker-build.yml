name: Build and Push Docker Image

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:  # Allow manual triggering
  push:
    branches:
      - main

jobs:
  check-for-updates:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check.outputs.has_changes }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Check for upstream changes
        id: check
        run: |
          git clone --depth 1 https://github.com/havaleiros/hassio-haval-h6-to-mqtt.git upstream
          
          # Compare last commit date
          LAST_COMMIT_DATE=$(git log -1 --format=%ct -- Dockerfile)
          UPSTREAM_COMMIT_DATE=$(cd upstream && git log -1 --format=%ct -- haval-h6-mqtt)
          
          if [ $UPSTREAM_COMMIT_DATE -gt $LAST_COMMIT_DATE ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Get version
        id: version
        if: steps.check.outputs.has_changes == 'true'
        run: |
          cd upstream
          VERSION=$(grep -oP '"version": "\K[^"]+' haval-h6-mqtt/config.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build-and-push:
    needs: check-for-updates
    if: needs.check-for-updates.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/haval-hass-docker:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/haval-hass-docker:${{ needs.check-for-updates.outputs.version }}
      
      - name: Update Dockerfile timestamp
        run: |
          touch Dockerfile
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add Dockerfile
          git commit -m "Update Dockerfile timestamp after build"
          git push 